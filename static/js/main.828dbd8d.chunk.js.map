{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","logo.svg","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAIcA,EAAO,SAAAC,GAAK,OACtB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAETC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAGH,6BAAML,EAAMI,QAAQE,OACpB,kCAAKN,EAAMI,QAAQG,aCNVC,G,OAAa,SAAAR,GAEtB,OADAS,QAAQC,IAAIV,GACL,sBAAKC,UAAU,YAAf,cAA6BD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OAE1D,cAAC,EAAD,CAAwBA,QAAUA,GAAvBA,EAAQC,YCNbQ,G,OAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OAEvB,uBAAOC,KAAK,SAEZF,YAAcA,EAEdb,UAAU,SAETgB,SAAUF,MCgDAG,GC5DA,I,gEDcb,aAAgB,IAAD,8BACb,gBAiBJH,aAAe,SAACI,GAEd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAjBnC,EAAKC,MAAQ,CACXb,SAAW,GAEXU,YAAa,KANF,E,qDAYjB,WAAsB,IAAD,OACnBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAU,CAACT,SAAUkB,S,oBAUzC,WACC,IAAD,EACqCC,KAAKN,MAA/Bb,EADX,EACWA,SAAUU,EADrB,EACqBA,YACbU,EAAmBpB,EAASqB,QAAQ,SAAArB,GAAQ,OAChDA,EAASL,KAAK2B,cAAcC,SAASb,EAAYY,kBAErD,OACE,sBAAKhC,UAAU,MAAf,UAEA,iDACA,cAAC,EAAD,CACAa,YAAY,iBACZC,aAAgBe,KAAKf,eAGrB,cAAC,EAAD,CAAUJ,SAAYoB,W,GA1CRI,cEAHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.828dbd8d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport  './card.styles.css';\r\n\r\nexport const  Card = props => (\r\n    <div className='card-container'>\r\n    <img alt='monster'\r\n\r\n    src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n    \r\n    />\r\n    <h2 >{props.monster.name}</h2>\r\n    <p> {props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component' ;\r\n\r\nimport  './card-list.styles.css';\r\n\r\nexport const CardList  =  props => {\r\n    console.log(props);\r\n    return <div className='card-list'> {props.monsters.map(monster => (  \r\n        \r\n        <Card key={monster.id}  monster= {monster} />))}\r\n        \r\n        </div>;\r\n};","import React from 'react';\r\n\r\nimport  './search-box.styles.css' ;\r\n\r\nexport const  SearchBox  = ({ placeholder, handleChange }) => (\r\n\r\n    <input type='search' \r\n    \r\n    placeholder= {placeholder}\r\n    \r\n    className='search'\r\n    \r\n     onChange={handleChange}/>\r\n\r\n);","import React, {Component} from 'react';\n\nimport { CardList } from  './components/card-list/card-list.component';\n\nimport { SearchBox } from  './components/search-box/search-box.component';\n\n// eslint-disable-next-line\nimport logo from './logo.svg';\nimport './App.css';\n// eslint-disable-next-line\nimport { render } from '@testing-library/react';\n\nclass App extends Component {\n  \n  constructor () {\n    super();\n\n    this.state = {\n      monsters:  [\n      ],\n      searchField: ' '\n    };\n\n    // this.handleChange = this.handleChange.bind(this);\n\n  }\ncomponentDidMount () {\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json ())\n  .then(users => this.setState ({monsters: users}));\n}\n\nhandleChange = (e) => {\n\n  this.setState({searchField: e.target.value});\n\n}\n\n  \n  render ()\n  {\n    const {  monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter( monsters => \n      monsters.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n  return (\n    <div className=\"App\">\n    \n    <h1>Monster Rolodex</h1>\n    <SearchBox\n    placeholder='search monster'\n    handleChange = {this.handleChange}\n\n    />\n    <CardList monsters = {filteredMonsters} />\n    \n    </div>\n  );\n}\n}\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}